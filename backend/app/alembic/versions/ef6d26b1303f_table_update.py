"""table update

Revision ID: ef6d26b1303f
Revises: 
Create Date: 2023-03-25 10:33:18.520380

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "ef6d26b1303f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admin",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "admin_type",
            mysql.TINYINT(),
            nullable=True,
            comment="1->Super Admin, 2->Admin",
        ),
        sa.Column("username", sa.String(length=50), nullable=True),
        sa.Column("password", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=50), nullable=True),
        sa.Column("last_name", sa.String(length=50), nullable=True),
        sa.Column("contact_no", sa.String(length=20), nullable=True),
        sa.Column("otp", sa.Integer(), nullable=True),
        sa.Column("otp_created", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column(
            "created_by", sa.Integer(), nullable=True, comment="admin table ref id"
        ),
        sa.Column("last_updated_at", sa.DateTime(), nullable=True),
        sa.Column(
            "last_updated_by", sa.Integer(), nullable=True, comment="admin table ref id"
        ),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment="0->Inactive, 1->Active"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "api_call_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("api", sa.String(length=2500), nullable=True, comment="url"),
        sa.Column("call_method", sa.String(length=25), nullable=True),
        sa.Column("params", mysql.LONGTEXT(), nullable=True),
        sa.Column(
            "ip", sa.String(length=25), nullable=True, comment="api call from which ip"
        ),
        sa.Column("datetime", sa.DateTime(), nullable=True),
        sa.Column("api_response", mysql.LONGTEXT(), nullable=True),
        sa.Column(
            "status",
            mysql.TINYINT(),
            nullable=True,
            comment="-1->Deleted, 0->inactive, 1->active",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "country",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "country_code", sa.String(length=10), nullable=True, comment=" phone code "
        ),
        sa.Column("mobile_no_length", sa.String(length=50), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("iso", sa.String(length=2), nullable=True),
        sa.Column(
            "img",
            sa.String(length=255),
            nullable=True,
            comment=" flag images or any icon images ",
        ),
        sa.Column("sms_enabled", mysql.TINYINT(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=False, comment="0->Inactive, 1->Active"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event_layouts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("last_updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_updated_by", sa.Integer(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=False, comment="0->Inactive, 1->Active"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "faq",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("question", sa.String(length=1250), nullable=True),
        sa.Column("answer", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column(
            "status",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" -1-deleted,0-inactive,1-active ",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "follow_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("follower_userid", sa.Integer(), nullable=True),
        sa.Column("following_userid", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column(
            "status",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" -1-deleted,0-inactive,1-active ",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "influencer_category",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=False, comment="0->Inactive, 1->Active"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "kurento_servers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("server_id", sa.String(length=10), nullable=True),
        sa.Column("name", sa.String(length=25), nullable=True),
        sa.Column("url", sa.String(length=100), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "language",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=250), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nugget_poll_option",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("nuggets_master_id", sa.Integer(), nullable=True),
        sa.Column("option_name", sa.String(length=255), nullable=True),
        sa.Column("votes", sa.Integer(), nullable=True),
        sa.Column(
            "poll_vote_percentage", sa.DECIMAL(precision=10, scale=2), nullable=True
        ),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nuggets_save",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True, comment=" user table id "),
        sa.Column(
            "nugget_id", sa.Integer(), nullable=True, comment=" nuggets table id "
        ),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment=" 0-Inactive, 1-Active "
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "payment_gateways",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("logo", sa.String(length=255), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment=" 0->Inactive, 1->Active "
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("settings_topic", sa.String(length=100), nullable=True),
        sa.Column("settings_value", sa.String(length=250), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tutorial_details",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(length=550), nullable=True),
        sa.Column(
            "type", mysql.TINYINT(), nullable=True, comment=" 1-link, 2-videopath "
        ),
        sa.Column("path", sa.String(length=550), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_ref_id", sa.String(length=25), nullable=True),
        sa.Column("email_id", sa.String(length=100), nullable=True),
        sa.Column(
            "is_email_id_verified",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 0->No, 1->Yes ",
        ),
        sa.Column("password", sa.String(length=250), nullable=True),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("display_name", sa.String(length=100), nullable=True),
        sa.Column(
            "gender",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 0->Transgender, 1->Male, 2->Female ",
        ),
        sa.Column("dob", sa.Date(), nullable=True),
        sa.Column("country_code", sa.String(length=10), nullable=True),
        sa.Column("mobile_no", sa.BigInteger(), nullable=True),
        sa.Column(
            "is_mobile_no_verified",
            mysql.TINYINT(display_width=4),
            nullable=True,
            comment=" 0->No, 1->Yes ",
        ),
        sa.Column("country_id", sa.Integer(), nullable=True),
        sa.Column(
            "user_code",
            sa.String(length=25),
            nullable=True,
            comment=" A unique code for users sharing purpose like refrrer ",
        ),
        sa.Column(
            "signup_type",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 1->Web, 2->Facebook, 3->Google ",
        ),
        sa.Column(
            "signup_social_ref_id",
            sa.String(length=100),
            nullable=True,
            comment=" reference id from facebook or google ",
        ),
        sa.Column("profile_img", sa.String(length=500), nullable=True),
        sa.Column("cover_image", sa.String(length=500), nullable=True),
        sa.Column("website", sa.String(length=100), nullable=True),
        sa.Column(
            "geo_location",
            mysql.TINYTEXT(),
            nullable=True,
            comment=" from google geo location ",
        ),
        sa.Column("latitude", sa.DECIMAL(precision=11, scale=7), nullable=True),
        sa.Column("longitude", sa.DECIMAL(precision=11, scale=7), nullable=True),
        sa.Column(
            "user_type_id",
            sa.Integer(),
            nullable=False,
            comment=" ref user_type_master ",
        ),
        sa.Column(
            "user_status_id",
            sa.Integer(),
            nullable=False,
            comment=" ref table user_status_master ",
        ),
        sa.Column("bio_data", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("online", mysql.TINYINT(display_width=1), nullable=False),
        sa.Column("web_online", mysql.TINYINT(display_width=1), nullable=False),
        sa.Column("app_online", mysql.TINYINT(display_width=1), nullable=False),
        sa.Column("last_seen", sa.DateTime(), nullable=True),
        sa.Column(
            "admin_verified_status",
            mysql.TINYINT(display_width=1),
            nullable=False,
            comment=" 1-approved 0-pending ",
        ),
        sa.Column("referrer_id", sa.Integer(), nullable=True),
        sa.Column("invited_date", sa.DateTime(), nullable=True),
        sa.Column("referral_expiry_date", sa.DateTime(), nullable=True),
        sa.Column("total_referral_point", sa.Integer(), nullable=False),
        sa.Column("unused_referral_points", sa.Integer(), nullable=False),
        sa.Column("influencer_category", sa.String(length=20), nullable=True),
        sa.Column(
            "status",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 0->verification pending, 1->Active, 2->Suspended, 3->Blocked, 4->Deleted ",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_status_change_log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column(
            "old_status",
            mysql.TINYINT(),
            nullable=True,
            comment=" 0->verification pending, 1->Active, 2->Suspended, 3->Blocked, 4->Deleted ",
        ),
        sa.Column(
            "new_status",
            mysql.TINYINT(),
            nullable=True,
            comment=" 0->verification pending, 1->Active, 2->Suspended, 3->Blocked, 4->Deleted ",
        ),
        sa.Column("changed_at", sa.DateTime(), nullable=True),
        sa.Column(
            "changed_by", mysql.TINYINT(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("note", sa.Text(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment=" 0->inactive, 1->active "
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_status_master",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column(
            "referral_needed",
            sa.Integer(),
            nullable=True,
            comment=" Referral need to upgrade user account (per month) ",
        ),
        sa.Column(
            "max_event_duration",
            sa.Integer(),
            nullable=True,
            comment=" Max Event Duration(hours) ",
        ),
        sa.Column(
            "max_event_participants_count",
            sa.Integer(),
            nullable=True,
            comment=" Max Participants allowed ",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_type_master",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "api_tokens",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("token", sa.String(length=100), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("renewed_at", sa.DateTime(), nullable=True),
        sa.Column(
            "validity",
            mysql.TINYINT(),
            nullable=False,
            comment="0->Expired, 1->Lifetime ",
        ),
        sa.Column(
            "device_type", mysql.TINYINT(), nullable=True, comment=" 1->Web, 2->APP "
        ),
        sa.Column("device_id", sa.String(length=255), nullable=True),
        sa.Column(
            "push_device_id",
            sa.String(length=255),
            nullable=True,
            comment=" FCM id / APNS id based on device type ",
        ),
        sa.Column(
            "app_type", mysql.TINYINT(), nullable=True, comment=" 1- Android, 2-IOS "
        ),
        sa.Column(
            "voip_token",
            sa.String(length=255),
            nullable=True,
            comment=" IOS VOIP Notification Token ",
        ),
        sa.Column("device_ip", sa.String(length=255), nullable=True),
        sa.Column(
            "status",
            mysql.TINYINT(),
            nullable=False,
            comment=" -1->Deleted, 0->inactive, 1->active ",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "aws_bounce_emails",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("notification_type", sa.String(length=50), nullable=True),
        sa.Column("bounce_type", sa.String(length=50), nullable=True),
        sa.Column("email_id", sa.String(length=100), nullable=True),
        sa.Column("bounce_count", sa.Integer(), nullable=False),
        sa.Column("bounce_datetime", sa.DateTime(), nullable=False),
        sa.Column(
            "status",
            mysql.TINYINT(),
            nullable=False,
            comment=" -1->Deleted, 0->inactive, 1->active ",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column(
            "payment_type",
            mysql.TINYINT(),
            nullable=False,
            comment=" 1->Free, 2->Paid ",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("last_updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_updated_by", sa.Integer(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=False, comment="0->Inactive, 1->Active"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["last_updated_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "friend_groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_name", sa.String(length=255), nullable=True),
        sa.Column("group_icon", sa.String(length=255), nullable=True),
        sa.Column(
            "created_by", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("chat_enabled", mysql.TINYINT(), nullable=False),
        sa.Column("warning_mail_count", sa.Integer(), nullable=False),
        sa.Column("warning_mail_status", mysql.TINYINT(), nullable=False),
        sa.Column("warning_mail_sent_date", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=False, comment="0->Inactive, 1->Active"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "friends_chat",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "msg_code",
            sa.String(length=30),
            nullable=True,
            comment=" unique code for each chat set by send device ",
        ),
        sa.Column("sender_id", sa.Integer(), nullable=True),
        sa.Column("receiver_id", sa.Integer(), nullable=True),
        sa.Column(
            "sent_type",
            mysql.TINYINT(display_width=4),
            nullable=True,
            comment=" 1-Normal,2-reply,3-forward,4-Call ",
        ),
        sa.Column("call_duration", sa.Time(), nullable=True),
        sa.Column(
            "call_status",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 0-Missed call,1-Accepted,2-Ongoing,3-Rejected ",
        ),
        sa.Column("parent_msg_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "forwarded_from", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column(
            "type",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 1-text,2-image,3-audio,4-video,5-file,6-Audio Call,7-Video Call ",
        ),
        sa.Column(
            "msg_from",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 1-web ,2-mobile ",
        ),
        sa.Column("message", sa.Text(), nullable=True),
        sa.Column("path", sa.String(length=255), nullable=True),
        sa.Column("sent_datetime", sa.DateTime(), nullable=True),
        sa.Column("is_read", mysql.TINYINT(display_width=1), nullable=True),
        sa.Column(
            "is_edited",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" is edited 1-true 0-false ",
        ),
        sa.Column("read_datetime", sa.DateTime(), nullable=True),
        sa.Column("is_deleted_for_both", mysql.TINYINT(display_width=1), nullable=True),
        sa.Column("sender_delete", sa.Integer(), nullable=True),
        sa.Column("receiver_delete", sa.Integer(), nullable=True),
        sa.Column("sender_deleted_datetime", sa.DateTime(), nullable=True),
        sa.Column("receiver_deleted_datetime", sa.DateTime(), nullable=True),
        sa.Column(
            "status",
            mysql.TINYINT(display_width=1),
            nullable=False,
            comment="0->Inactive, 1->Active",
        ),
        sa.ForeignKeyConstraint(
            ["forwarded_from"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["receiver_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "login_failure_log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True, comment=" ref user table "),
        sa.Column("ip", sa.String(length=15), nullable=True, comment=" ip address "),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "my_friends",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "sender_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column(
            "receiver_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("request_date", sa.DateTime(), nullable=True),
        sa.Column(
            "request_status",
            mysql.TINYINT(),
            nullable=True,
            comment=" 0->Pending, 1->Accepted, 2->Rejected, 3->Blocked ",
        ),
        sa.Column("status_date", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment=" 0->inactive, 1->active "
        ),
        sa.ForeignKeyConstraint(
            ["receiver_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "notification",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id",
            sa.Integer(),
            nullable=True,
            comment="  user table ref id - who receive this notification  ",
        ),
        sa.Column(
            "notification_origin_id",
            sa.Integer(),
            nullable=True,
            comment="  user table ref id - who send this notification  ",
        ),
        sa.Column(
            "notification_type",
            mysql.TINYINT(),
            nullable=True,
            comment=" 1-nugget create, 2-Nugget Edit, 3-Nugget Comment, 4-nugget Reply, 5-Nugget Like, 6-nugget comment like, 7-Nugget reply like,8-Nugget share, 9-event create, 10-event edit, 11-friend request, 12-friend request approved ",
        ),
        sa.Column("ref_id", sa.BigInteger(), nullable=True),
        sa.Column("is_read", mysql.TINYINT(), nullable=True),
        sa.Column("read_datetime", sa.DateTime(), nullable=True),
        sa.Column("created_datetime", sa.DateTime(), nullable=True),
        sa.Column("deleted_datetime", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment="  1- active, 0-deleted  "
        ),
        sa.ForeignKeyConstraint(
            ["notification_origin_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "notification_sms_email",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("type", mysql.TINYINT(), nullable=True, comment=" 1-sms,2-email "),
        sa.Column("mobile_no_email_id", sa.String(length=500), nullable=True),
        sa.Column("subject", sa.String(length=250), nullable=True),
        sa.Column("message", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment="  1- active, 0-deleted  "
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nuggets_comments_likes",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True, comment=" User table id "),
        sa.Column(
            "comment_id",
            sa.Integer(),
            nullable=True,
            comment=" nuggets_comments table id ",
        ),
        sa.Column(
            "nugget_id", sa.Integer(), nullable=True, comment=" nuggets table id "
        ),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nuggets_master",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("metadata", sa.BLOB(), nullable=True),
        sa.Column("poll_duration", sa.String(length=15), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("modified_date", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment=" 0-Inactive, 1-Active "
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "otp_log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("otp", sa.Integer(), nullable=True),
        sa.Column(
            "otp_type",
            mysql.TINYINT(),
            nullable=True,
            comment=" 1->Signup, 2->Login, 3->Forgot password ",
        ),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment=" 0->Inactive, 1->Active "
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "profile_report",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" report created by "
        ),
        sa.Column(
            "profile_id",
            sa.Integer(),
            nullable=True,
            comment=" user table ref id - whom profile is reported ",
        ),
        sa.Column("report_type", mysql.TINYINT(), nullable=True),
        sa.Column("message", sa.String(length=500), nullable=True),
        sa.Column("reported_date", sa.DateTime(), nullable=True),
        sa.Column("report_status", mysql.TINYINT(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment=" 0->Inactive, 1->Active "
        ),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "raw_caster_invites",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("to_email_id", sa.String(length=50), nullable=True),
        sa.Column(
            "ref_code",
            sa.String(length=50),
            nullable=True,
            comment=" ref code used for external link ",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column(
            "invite_status",
            mysql.TINYINT(),
            nullable=True,
            comment=" 0->sent, 1->joined ",
        ),
        sa.Column(
            "status",
            mysql.TINYINT(),
            nullable=True,
            comment="  0->Inactive, 1->Active  ",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "signup_log",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("ip", sa.String(length=50), nullable=True),
        sa.Column(
            "device_type",
            mysql.TINYINT(),
            nullable=True,
            comment=" 1->Web, 2->Android, 3->IOS ",
        ),
        sa.Column("device_details", sa.Text(), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment=" 0->inactive, 1->active "
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_login_log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("date_time", sa.DateTime(), nullable=True),
        sa.Column(
            "login_status",
            mysql.TINYINT(),
            nullable=True,
            comment=" 0->Failed, 1->success ",
        ),
        sa.Column(
            "device_type",
            mysql.TINYINT(),
            nullable=True,
            comment=" 1->Web, 2->Android, 3->IOS ",
        ),
        sa.Column("device_details", sa.Text(), nullable=True),
        sa.Column("ip", sa.String(length=50), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment=" 0->inactive, 1->active "
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("online_status", mysql.TINYINT(), nullable=True),
        sa.Column("phone_display_status", mysql.TINYINT(), nullable=True),
        sa.Column("location_display_status", mysql.TINYINT(), nullable=True),
        sa.Column("dob_display_status", mysql.TINYINT(), nullable=True),
        sa.Column("bio_display_status", mysql.TINYINT(), nullable=True),
        sa.Column("passcode_status", mysql.TINYINT(), nullable=True),
        sa.Column("passcode", sa.String(length=15), nullable=True),
        sa.Column("public_nugget_display", mysql.TINYINT(), nullable=True),
        sa.Column("public_event_display", mysql.TINYINT(), nullable=True),
        sa.Column("waiting_room", mysql.TINYINT(), nullable=True),
        sa.Column("schmoozing_status", mysql.TINYINT(), nullable=True),
        sa.Column("breakout_status", mysql.TINYINT(), nullable=True),
        sa.Column("join_before_host", mysql.TINYINT(), nullable=True),
        sa.Column("auto_record", mysql.TINYINT(), nullable=True),
        sa.Column("participant_join_sound", mysql.TINYINT(), nullable=True),
        sa.Column("screen_share_status", mysql.TINYINT(), nullable=True),
        sa.Column("virtual_background", mysql.TINYINT(), nullable=True),
        sa.Column("host_audio", mysql.TINYINT(), nullable=True),
        sa.Column("host_video", mysql.TINYINT(), nullable=True),
        sa.Column("participant_audio", mysql.TINYINT(), nullable=True),
        sa.Column("participant_video", mysql.TINYINT(), nullable=True),
        sa.Column("melody", sa.Integer(), nullable=True),
        sa.Column("meeting_header_image", sa.String(length=500), nullable=True),
        sa.Column("friend_request", sa.String(length=5), nullable=True),
        sa.Column("nuggets", sa.String(length=5), nullable=True),
        sa.Column("events", sa.String(length=5), nullable=True),
        sa.Column("language_id", sa.Integer(), nullable=True),
        sa.Column("time_zone", sa.String(length=25), nullable=True),
        sa.Column("date_format", sa.String(length=25), nullable=True),
        sa.Column("mobile_default_page", mysql.TINYINT(), nullable=True),
        sa.Column("default_event_type", mysql.TINYINT(), nullable=True),
        sa.Column("manual_acc_active_inactive", mysql.TINYINT(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event_invitations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            mysql.TINYINT(display_width=4),
            nullable=True,
            comment=" 1- Friend, 2- Group, 3-Custom ",
        ),
        sa.Column("event_id", sa.Integer(), nullable=True, comment=" events table ID "),
        sa.Column("user_id", sa.Integer(), nullable=True, comment=" user table ID "),
        sa.Column(
            "group_id", sa.Integer(), nullable=True, comment=" friend_groups table ID "
        ),
        sa.Column("invite_mail", sa.String(length=255), nullable=True),
        sa.Column("invite_sent", mysql.TINYINT(display_width=1), nullable=True),
        sa.Column("is_changed", mysql.TINYINT(display_width=1), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            mysql.TINYINT(display_width=1),
            nullable=False,
            comment="0->Inactive, 1->Active",
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["friend_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "events",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column(
            "ref_id", sa.String(length=255), nullable=True, comment=" Reference ID "
        ),
        sa.Column("server_id", sa.String(length=10), nullable=True),
        sa.Column(
            "type",
            mysql.TINYINT(),
            nullable=False,
            comment=" 1 - Event, 2 - Talkshow, 3-Live ",
        ),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "event_type_id",
            sa.Integer(),
            nullable=True,
            comment=" event_type table ref id ",
        ),
        sa.Column("event_layout_id", sa.Integer(), nullable=True),
        sa.Column(
            "event_melody_id",
            sa.Integer(),
            nullable=True,
            comment=" id ref from tabelevent_melody ",
        ),
        sa.Column("no_of_participants", sa.Integer(), nullable=True),
        sa.Column("duration", sa.Time(), nullable=True),
        sa.Column("start_date_time", sa.DateTime(), nullable=True),
        sa.Column("cover_img", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column(
            "created_by", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("last_updated_at", sa.DateTime(), nullable=True),
        sa.Column("total_cost", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("paid_amount", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("pending_amount", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column(
            "payment_status",
            mysql.TINYINT(),
            nullable=False,
            comment=" 0->Pending, 1->Paid, 2->Partial paid ",
        ),
        sa.Column(
            "event_status",
            mysql.TINYINT(),
            nullable=False,
            comment=" 0->Cancelled, 1->Upcoming, 2->Ongoing, 3->Completed ",
        ),
        sa.Column("waiting_room", mysql.TINYINT(), nullable=True),
        sa.Column("join_before_host", mysql.TINYINT(), nullable=True),
        sa.Column("sound_notify", mysql.TINYINT(), nullable=True),
        sa.Column("user_screenshare", mysql.TINYINT(), nullable=True),
        sa.Column(
            "status",
            mysql.TINYINT(),
            nullable=False,
            comment=" 0->Inactive, 1->Active ",
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["event_layout_id"],
            ["event_layouts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["event_type_id"],
            ["event_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "friend_group_members",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "group_id",
            sa.Integer(),
            nullable=True,
            comment=" friend_groups table ref id ",
        ),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("added_date", sa.DateTime(), nullable=True),
        sa.Column(
            "added_by", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column("is_admin", mysql.TINYINT(display_width=1), nullable=True),
        sa.Column(
            "disable_notification", mysql.TINYINT(display_width=1), nullable=True
        ),
        sa.Column(
            "status",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment="  0->inactive, 1->active  ",
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["friend_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "group_chat",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "msg_code",
            sa.String(length=30),
            nullable=True,
            comment=" unique code for each chat set by send device ",
        ),
        sa.Column("group_id", sa.Integer(), nullable=True),
        sa.Column("sender_id", sa.Integer(), nullable=True),
        sa.Column(
            "sent_type",
            mysql.TINYINT(display_width=4),
            nullable=True,
            comment=" 1-Normal,2-reply,3-forward,4-Call ",
        ),
        sa.Column("call_duration", sa.Time(), nullable=True),
        sa.Column(
            "call_status",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 0-Missed call,1-Accepted,2-Ongoing,3-Rejected ",
        ),
        sa.Column("parent_msg_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "forwarded_from", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column(
            "type",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 1-text,2-image,3-audio,4-video,5-file,6-Audio Call,7-Video Call ",
        ),
        sa.Column(
            "msg_from",
            mysql.TINYINT(display_width=4),
            nullable=True,
            comment=" 1-web ,2-mobile ",
        ),
        sa.Column("message", sa.Text(), nullable=True),
        sa.Column("path", sa.String(length=255), nullable=True),
        sa.Column("sent_datetime", sa.DateTime(), nullable=True),
        sa.Column(
            "is_edited",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" is edited 1-true 0-false ",
        ),
        sa.Column(
            "is_deleted_for_all",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment=" 0 - No, 1 - all, 2-me ",
        ),
        sa.Column(
            "status",
            mysql.TINYINT(display_width=1),
            nullable=True,
            comment="0-inactive,1-active ",
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["friend_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "group_report",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("group_id", sa.Integer(), nullable=True),
        sa.Column("message", sa.String(length=500), nullable=True),
        sa.Column("reported_date", sa.DateTime(), nullable=True),
        sa.Column("report_status", mysql.TINYINT(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=True, comment="0-inactive,1-active "
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["friend_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nuggets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "nuggets_id",
            sa.Integer(),
            nullable=True,
            comment=" nuggets_master table ID ",
        ),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" nuggets_master table ID "
        ),
        sa.Column(
            "type", mysql.TINYINT(), nullable=True, comment=" 1->Original,2->Shared "
        ),
        sa.Column(
            "share_type",
            mysql.TINYINT(),
            nullable=True,
            comment=" 1->Public, 2->Only me, 3->Groups, 4->Individual, 5->both Group and Individual, 6->All My Friends ",
        ),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("modified_date", sa.DateTime(), nullable=True),
        sa.Column("total_view_count", sa.Integer(), nullable=True),
        sa.Column("warning_mail_count", sa.Integer(), nullable=True),
        sa.Column("warning_mail_status", mysql.TINYINT(), nullable=True),
        sa.Column("warning_mail_sent_date", sa.DateTime(), nullable=True),
        sa.Column(
            "nugget_status",
            mysql.TINYINT(),
            nullable=True,
            comment=" 1->Active,2->deleted,3->blocked ",
        ),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nuggets_id"],
            ["nuggets_master.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nuggets_attachment",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True, comment=" User table id "),
        sa.Column(
            "nugget_id",
            sa.Integer(),
            nullable=True,
            comment=" Nuggets master table id ",
        ),
        sa.Column(
            "media_type",
            sa.String(length=10),
            nullable=True,
            comment=" Image or Video ",
        ),
        sa.Column(
            "media_file_type",
            sa.String(length=10),
            nullable=True,
            comment=" Media Extension ",
        ),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("path", sa.Text(), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nugget_id"],
            ["nuggets_master.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_profile_display_group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("profile_id", sa.String(length=50), nullable=True),
        sa.Column("groupid", sa.Integer(), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["groupid"],
            ["friend_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event_default_av",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=True),
        sa.Column(
            "default_host_audio", mysql.TINYINT(), nullable=True, comment="0-No,1-Yes"
        ),
        sa.Column(
            "default_host_video", mysql.TINYINT(), nullable=True, comment="0-No,1-Yes"
        ),
        sa.Column(
            "default_guest_audio", mysql.TINYINT(), nullable=True, comment="0-No,1-Yes"
        ),
        sa.Column(
            "default_guest_video", mysql.TINYINT(), nullable=True, comment="0-No,1-Yes"
        ),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event_melody",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("event_id", sa.Integer(), nullable=True),
        sa.Column("is_default", mysql.TINYINT(display_width=1), nullable=False),
        sa.Column(
            "is_created_by_admin", mysql.TINYINT(display_width=1), nullable=False
        ),
        sa.Column("path", sa.Text(), nullable=True),
        sa.Column(
            "type",
            mysql.TINYINT(display_width=4),
            nullable=True,
            comment=" 1-Image, 2-Video, 3-Audio, 4-PPT ",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=False, comment="0->Inactive, 1->Active"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event_update_log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "event_id", sa.Integer(), nullable=True, comment=" event table ref id "
        ),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment="  user table ref id  "
        ),
        sa.Column("no_of_participants", sa.Integer(), nullable=True),
        sa.Column("duration", sa.Time(), nullable=True),
        sa.Column("amount", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("old_participants", sa.Integer(), nullable=True),
        sa.Column("old_duration", sa.Time(), nullable=True),
        sa.Column("old_amount", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("new_participants", sa.Integer(), nullable=True),
        sa.Column("new_duration", sa.Time(), nullable=True),
        sa.Column("new_amount", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column(
            "status", mysql.TINYINT(), nullable=False, comment="0->Inactive, 1->Active"
        ),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nugget_hash_tags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("nugget_master_id", sa.Integer(), nullable=True),
        sa.Column("nugget_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("country_id", sa.Integer(), nullable=True),
        sa.Column("hash_tag", sa.String(length=100), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["country.id"],
        ),
        sa.ForeignKeyConstraint(
            ["nugget_id"],
            ["nuggets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["nugget_master_id"],
            ["nuggets_master.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nugget_poll_voted",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("nugget_master_id", sa.Integer(), nullable=True),
        sa.Column("nugget_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("poll_option_id", sa.Integer(), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nugget_id"],
            ["nuggets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["nugget_master_id"],
            ["nuggets_master.id"],
        ),
        sa.ForeignKeyConstraint(
            ["poll_option_id"],
            ["nugget_poll_option.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nugget_report",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("nugget_id", sa.Integer(), nullable=True),
        sa.Column("message", sa.String(length=500), nullable=True),
        sa.Column("reported_date", sa.DateTime(), nullable=True),
        sa.Column("report_status", mysql.TINYINT(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nugget_id"],
            ["nuggets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nugget_view",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("nugget_id", sa.Integer(), nullable=True),
        sa.Column("ip_address", sa.String(length=20), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nugget_id"],
            ["nuggets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nuggets_comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True, comment=" User table id "),
        sa.Column(
            "nugget_id", sa.Integer(), nullable=True, comment=" Nuggets table id "
        ),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("modified_date", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nugget_id"],
            ["nuggets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["nuggets_comments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nuggets_likes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "nugget_id", sa.Integer(), nullable=True, comment=" nuggets table id "
        ),
        sa.Column("user_id", sa.Integer(), nullable=True, comment=" user table id "),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("status", mysql.TINYINT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nugget_id"],
            ["nuggets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nuggets_share_with",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "nuggets_id", sa.Integer(), nullable=True, comment=" nuggets table id "
        ),
        sa.Column("type", mysql.TINYINT(), nullable=True, comment=" 1-Group,2-User "),
        sa.Column(
            "share_with",
            sa.Integer(),
            nullable=True,
            comment=" Either Group id or User id ",
        ),
        sa.ForeignKeyConstraint(
            ["nuggets_id"],
            ["nuggets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "online_payment_details",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sa.Integer(), nullable=True, comment=" user table ref id "
        ),
        sa.Column(
            "paid_for", mysql.TINYINT(), nullable=True, comment=" 1->Event, 2->Wallet "
        ),
        sa.Column(
            "event_id", sa.Integer(), nullable=True, comment=" event table ref id "
        ),
        sa.Column("date_time", sa.DateTime(), nullable=True),
        sa.Column(
            "payment_gateway_id",
            sa.Integer(),
            nullable=True,
            comment=" payment_gateway table ref id ",
        ),
        sa.Column(
            "payment_gateway_request",
            sa.Text(),
            nullable=True,
            comment=" raw request sent to payment gateway with params ",
        ),
        sa.Column(
            "payment_gateway_response",
            sa.Text(),
            nullable=True,
            comment=" raw response received from payment gateway ",
        ),
        sa.Column(
            "payment_status",
            mysql.TINYINT(),
            nullable=True,
            comment=" 0->Pending, 1->Success, 2->Failed ",
        ),
        sa.Column(
            "our_ref_code",
            sa.String(length=100),
            nullable=True,
            comment=" for our local app purpose ",
        ),
        sa.Column(
            "payment_gateway_ref_code",
            sa.String(length=100),
            nullable=True,
            comment=" for payment gateway ",
        ),
        sa.Column("request_time", sa.DateTime(), nullable=True),
        sa.Column("response_time", sa.DateTime(), nullable=True),
        sa.Column("event_update_log_ref_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
        ),
        sa.ForeignKeyConstraint(
            ["payment_gateway_id"],
            ["payment_gateways.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("online_payment_details")
    op.drop_table("nuggets_share_with")
    op.drop_table("nuggets_likes")
    op.drop_table("nuggets_comments")
    op.drop_table("nugget_view")
    op.drop_table("nugget_report")
    op.drop_table("nugget_poll_voted")
    op.drop_table("nugget_hash_tags")
    op.drop_table("event_update_log")
    op.drop_table("event_melody")
    op.drop_table("event_default_av")
    op.drop_table("user_profile_display_group")
    op.drop_table("nuggets_attachment")
    op.drop_table("nuggets")
    op.drop_table("group_report")
    op.drop_table("group_chat")
    op.drop_table("friend_group_members")
    op.drop_table("events")
    op.drop_table("event_invitations")
    op.drop_table("user_settings")
    op.drop_table("user_login_log")
    op.drop_table("signup_log")
    op.drop_table("raw_caster_invites")
    op.drop_table("profile_report")
    op.drop_table("otp_log")
    op.drop_table("nuggets_master")
    op.drop_table("nuggets_comments_likes")
    op.drop_table("notification_sms_email")
    op.drop_table("notification")
    op.drop_table("my_friends")
    op.drop_table("login_failure_log")
    op.drop_table("friends_chat")
    op.drop_table("friend_groups")
    op.drop_table("event_types")
    op.drop_table("aws_bounce_emails")
    op.drop_table("api_tokens")
    op.drop_table("user_type_master")
    op.drop_table("user_status_master")
    op.drop_table("user_status_change_log")
    op.drop_table("user")
    op.drop_table("tutorial_details")
    op.drop_table("settings")
    op.drop_table("payment_gateways")
    op.drop_table("nuggets_save")
    op.drop_table("nugget_poll_option")
    op.drop_table("language")
    op.drop_table("kurento_servers")
    op.drop_table("influencer_category")
    op.drop_table("follow_user")
    op.drop_table("faq")
    op.drop_table("event_layouts")
    op.drop_table("country")
    op.drop_table("api_call_history")
    op.drop_table("admin")
    # ### end Alembic commands ###
